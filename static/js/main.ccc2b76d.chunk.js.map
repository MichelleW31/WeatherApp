{"version":3,"sources":["components/CurrentTemperature/CurrentTemperature.module.scss","components/DailyForecast/DailyForecast.module.scss","components/Header/Header.module.scss","components/Temperature/Temperature.module.scss","components/Header/Header.js","components/Icon/Icon.js","components/Temperature/Temperature.js","components/CurrentTemperature/CurrentTemperature.js","components/HourlyForecast/HourlyForecast.js","components/DailyForecast/DailyForecast.js","components/FiveDayForecast/FiveDayForecast.js","containers/App.js","serviceWorker.js","index.js","components/HourlyForecast/HourlyForecast.module.scss","components/FiveDayForecast/FiveDayForecast.module.scss"],"names":["module","exports","Header","weatherData","showInput","setCurrentCity","error","useState","city","setCity","className","styles","HeaderContainer","HeaderCopy","CityInputContainer","type","value","onChange","e","target","placeholder","CityInput","onClick","SubmitButton","Error","CityCopy","CityName","name","Icon","weather","iconURL","setURL","description","useEffect","axios","get","icon","then","response","config","url","catch","console","log","IconContainer","Image","src","alt","Temperature","main","TemperatureContainer","WeatherLocationCopy","CopyAndImage","TemperatureCopy","MainTemperature","Math","round","temp","FeelsLikeTemperature","feels_like","TemperatureDescription","CurrentTemperature","CurrentTemperatureContainer","HourlyForecast","hourly","dt","convertDateandTime","date","conversion","newDate","Date","toDateString","toLocaleTimeString","HourlyForecastContainer","Time","DailyForecast","forecast","DailyForecastContainer","map","key","dt_txt","FiveDayForecast","forecastList","FiveDayForecastContainer","ForecastTitle","array","newForecastArray","arrayCopy","length","push","splice","splitArray","App","setError","step","setStep","setWeatherData","setForecastList","setshowInput","isError","errorCode","position","latitude","longitude","process","coords","status","data","getFiveDayForecast","id","list","navigator","geolocation","getCurrentPosition","code","PERMISSION_DENIED","stateManager","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,4BAA8B,0D,mBCAhDD,EAAOC,QAAU,CAAC,uBAAyB,gD,2ECA3CD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,WAAa,2BAA2B,SAAW,yBAAyB,UAAY,0BAA0B,aAAe,6BAA6B,SAAW,yBAAyB,mBAAqB,mCAAmC,MAAQ,wB,uCCAtUD,EAAOC,QAAU,CAAC,qBAAuB,0CAA0C,aAAe,kCAAkC,gBAAkB,qCAAqC,gBAAkB,qCAAqC,qBAAuB,0CAA0C,uBAAyB,4CAA4C,oBAAsB,2C,mHCyC/XC,EAvCA,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,YAAaC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,eAAgBC,EAAY,EAAZA,MAAY,EAC9CC,mBAAS,IADqC,mBAC/DC,EAD+D,KACzDC,EADyD,KAOpE,OACE,4BAAQC,UAAWC,IAAOC,iBACxB,wBAAIF,UAAWC,IAAOE,YAAtB,oBAECT,GACC,yBAAKM,UAAWC,IAAOG,oBACrB,2BACEC,KAAK,OACLC,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOT,EAAQS,EAAEC,OAAOH,QAClCI,YAAY,kBACZV,UAAWC,IAAOU,YAGpB,4BAAQC,QAlBG,WACjBjB,EAAe,KAAMG,IAiBcE,UAAWC,IAAOY,cAA/C,gBAMO,KAAVjB,GAAgB,uBAAGI,UAAWC,IAAOa,OAAQlB,GAE7CH,GACC,uBAAGO,UAAWC,IAAOc,UAArB,sBACsB,IACpB,0BAAMf,UAAWC,IAAOe,UAAWvB,EAAYwB,S,kECJ1CC,EA3BF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACJtB,qBADI,mBACvBuB,EADuB,KACdC,EADc,KAEpBC,EAAgBH,EAAQ,GAAxBG,YAkBR,OAhBAC,qBAAU,WACJJ,GACFK,IACGC,IADH,6CAE0CN,EAAQ,GAAGO,KAFrD,wBAKGC,MAAK,SAACC,GACLP,EAAOO,EAASC,OAAOC,QAExBC,OAAM,SAACnC,GACNoC,QAAQC,IAAIrC,SAMlB,yBAAKI,UAAWC,IAAOiC,eACrB,yBAAKlC,UAAWC,IAAOkC,MAAOC,IAAKhB,EAASiB,IAAG,UAAKf,EAAL,aCOtCgB,EA7BK,SAAC,GAAqB,IAAnB7C,EAAkB,EAAlBA,YACbwB,EAAwBxB,EAAxBwB,KAAMsB,EAAkB9C,EAAlB8C,KAAMpB,EAAY1B,EAAZ0B,QAEpB,OACE,6BAASnB,UAAWC,IAAOuC,sBACzB,wBAAIxC,UAAWC,IAAOwC,qBAAtB,cAAuDxB,GACvD,yBAAKjB,UAAWC,IAAOyC,cACrB,yBAAK1C,UAAWC,IAAO0C,iBACrB,wBAAI3C,UAAWC,IAAO2C,iBACnBC,KAAKC,MAAMP,EAAKQ,MAChB,QAEH,uBAAG/C,UAAWC,IAAO+C,sBAArB,aACa,IACX,8BACGH,KAAKC,MAAMP,EAAKU,YAChB,SAGL,wBAAIjD,UAAWC,IAAOiD,wBACnB/B,EAAQ,GAAGG,cAGhB,kBAAC,EAAD,CAAMH,QAASA,OCfRgC,EARY,SAAC,GAAqB,IAAnB1D,EAAkB,EAAlBA,YAC5B,OACE,yBAAKO,UAAWC,IAAOmD,6BACrB,kBAAC,EAAD,CAAa3D,YAAaA,M,wBCmBjB4D,EAtBQ,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChBC,EAAsBD,EAAtBC,GAAIhB,EAAkBe,EAAlBf,KAAMpB,EAAYmC,EAAZnC,QAEZqC,EAAqB,SAACC,EAAMC,GAChC,IAAMC,EAAU,IAAIC,KAAY,IAAPH,GACzB,MAAmB,SAAfC,EAA8BC,EAAQE,eACvB,SAAfH,EAA8BC,EAAQG,0BAA1C,GAGF,OACE,yBAAK9D,UAAWC,IAAO8D,yBACrB,wBAAI/D,UAAWC,IAAO2D,MAAOJ,EAAmBD,EAAI,SACpD,uBAAGvD,UAAWC,IAAO+D,MAAOR,EAAmBD,EAAI,SACnD,wBAAIvD,UAAWC,IAAO2C,iBACnBC,KAAKC,MAAMP,EAAKQ,MAChB,QAEH,kBAAC,EAAD,CAAM5B,QAASA,M,iBCLN8C,EAZO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAKvB,OACE,yBAAKlE,UAAWC,IAAOkE,wBACpBD,EAASE,KANI,SAACd,GAAD,OAChB,kBAAC,EAAD,CAAgBe,IAAKf,EAAOgB,OAAQhB,OAAQA,S,gBC2BjCiB,EA7BS,SAAC,GAA4B,IAA1BtD,EAAyB,EAAzBA,KAAMuD,EAAmB,EAAnBA,aAgB/B,OACE,yBAAKxE,UAAWC,IAAOwE,0BACrB,wBAAIzE,UAAWC,IAAOyE,eAAtB,4BAC4B,IAC1B,0BAAM1E,UAAWC,IAAOe,UAAWC,IAErC,yBAAKjB,UAAWC,IAAOsE,iBAjBR,SAACI,GAGlB,IAFA,IAAIC,EAAmB,GACnBC,EAAS,YAAOF,GACbE,EAAUC,OAAS,GAExBF,EAAiBG,KAAKF,EAAUG,OAAO,EAAG,IAG5C,OAAOJ,EAUFK,CAAWT,GAAcJ,KAtBZ,SAACF,GAAD,OAClB,kBAAC,EAAD,CAAeG,IAAKH,EAAS,GAAGI,OAAQJ,SAAUA,UC6IvCgB,EA5IH,WAAO,IAAD,EACQrF,mBAAS,IADjB,mBACXD,EADW,KACJuF,EADI,OAEMtF,mBAAS,GAFf,mBAEXuF,EAFW,KAELC,EAFK,OAGoBxF,mBAAS,MAH7B,mBAGXJ,EAHW,KAGE6F,EAHF,OAIsBzF,mBAAS,IAJ/B,mBAIX2E,EAJW,KAIGe,EAJH,OAKgB1F,oBAAS,GALzB,mBAKXH,EALW,KAKA8F,EALA,KAOVC,EAAU,SAAC3F,EAAM4F,GACrB,MAAa,KAAT5F,GACFqF,EAAS,yBACF,GACgB,MAAdO,GAETP,EAAS,6CACF,IAEPA,EAAS,KACF,IAILxF,EAAiB,SAACgG,EAAU7F,GAChC,IAAI8F,EACAC,EACA/D,EAEJ,GAAiB,OAAb6D,EAAmB,CACrB,GAAKF,EAAQ3F,GAGN,OAFLgC,EAAG,4DAAwDhC,EAAxD,kBAAsEgG,mCAAtE,kCAILF,EAAWD,EAASI,OAAOH,SAC3BC,EAAYF,EAASI,OAAOF,UAC5B/D,EAAG,8DAA0D8D,EAA1D,gBAA0EC,EAA1E,kBAA6FC,mCAA7F,yBAILtE,IACGC,IAAIK,GACJH,MAAK,SAACC,GACL,GAAIA,EAASoE,OAAS,IACpB,MAAMpE,EAGR0D,EAAe1D,EAASqE,MACxBZ,EAAQ,GACRa,EAAmBtE,EAASqE,SAE7BlE,OAAM,SAACnC,GACN6F,EAAQ7F,EAAMgC,SAASoE,YAIvBE,EAAqB,SAACD,GAAU,IAC5BE,EAAOF,EAAPE,GAER3E,IACGC,IADH,+DAE4D0E,EAF5D,kBAEwEL,mCAFxE,gCAKGnE,MAAK,SAACC,GACL,GAAIA,EAASoE,OAAS,IACpB,MAAMpE,EAERI,QAAQC,IAAIL,EAASqE,MACrBV,EAAgB3D,EAASqE,KAAKG,SAE/BrE,OAAM,SAACnC,GACN6F,EAAQ7F,EAAMgC,SAASoE,YAI7BzE,qBAAU,WAEJ8E,UAAUC,aACZD,UAAUC,YAAYC,mBAAmB5G,GAAgB,SACvDC,GAEIA,EAAM4G,MAAQ5G,EAAM6G,mBAAmBjB,GAAa,QAG3D,IAoBH,OACE,yBAAKxF,UAAU,OACb,kBAAC,EAAD,CACEP,YAAaA,EACbC,UAAWA,EACXC,eAAgBA,EAChBC,MAAOA,IAEQ,OAAhBH,GACC,6BAASO,UAAU,kBACjB,4BACE,wBACEA,UAAoB,IAAToF,EAAa,SAAW,KACnCxE,QAAS,WACPyE,EAAQ,KAHZ,uBAQA,wBACErF,UAAoB,IAAToF,EAAa,SAAW,KACnCxE,QAAS,WACPyE,EAAQ,KAHZ,oBArCW,WACnB,OAAQD,GACN,KAAK,EACH,OAAO,uBAAGpF,UAAU,gBAAb,oCACT,KAAK,EACH,OAAO,kBAAC,EAAD,CAAoBP,YAAaA,IAC1C,KAAK,EACH,OACE,kBAAC,EAAD,CACEwB,KAAMxB,EAAYwB,KAClBuD,aAAcA,IAGpB,QACE,OAAO,uBAAGxE,UAAU,gBAAb,qCAmCR0G,GACU,KAAV9G,GAAgB,uBAAGI,UAAU,SAASJ,KClIzB+G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBf,WACrBA,UAAUgB,cAAcC,MACrB3F,MAAK,SAAA4F,GACJA,EAAaC,gBAEdzF,OAAM,SAAAnC,GACLoC,QAAQpC,MAAMA,EAAM6H,a,kBExI5BnI,EAAOC,QAAU,CAAC,wBAA0B,gDAAgD,KAAO,6BAA6B,KAAO,+B,kBCAvID,EAAOC,QAAU,CAAC,yBAA2B,kDAAkD,cAAgB,uCAAuC,gBAAkB,yCAAyC,SAAW,qC","file":"static/js/main.ccc2b76d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CurrentTemperatureContainer\":\"CurrentTemperature_CurrentTemperatureContainer__3SALd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DailyForecastContainer\":\"DailyForecast_DailyForecastContainer__25jAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HeaderContainer\":\"Header_HeaderContainer__1lPul\",\"HeaderCopy\":\"Header_HeaderCopy__iNvRM\",\"CityName\":\"Header_CityName__211vU\",\"CityInput\":\"Header_CityInput__342PM\",\"SubmitButton\":\"Header_SubmitButton__3VxW9\",\"CityCopy\":\"Header_CityCopy__3x2wE\",\"CityInputContainer\":\"Header_CityInputContainer__9Z59v\",\"Error\":\"Header_Error__3HmOy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TemperatureContainer\":\"Temperature_TemperatureContainer__adSLI\",\"CopyAndImage\":\"Temperature_CopyAndImage__3okRl\",\"TemperatureCopy\":\"Temperature_TemperatureCopy___5Mlg\",\"MainTemperature\":\"Temperature_MainTemperature__SauHL\",\"FeelsLikeTemperature\":\"Temperature_FeelsLikeTemperature__2HFjc\",\"TemperatureDescription\":\"Temperature_TemperatureDescription__2u5sC\",\"WeatherLocationCopy\":\"Temperature_WeatherLocationCopy__Uyrww\"};","import React, { useState } from \"react\";\nimport styles from \"./Header.module.scss\";\n\nconst Header = ({ weatherData, showInput, setCurrentCity, error }) => {\n  let [city, setCity] = useState(\"\");\n\n  const getWeather = () => {\n    setCurrentCity(null, city);\n  };\n\n  return (\n    <header className={styles.HeaderContainer}>\n      <h1 className={styles.HeaderCopy}>Weather Forecast</h1>\n\n      {showInput && (\n        <div className={styles.CityInputContainer}>\n          <input\n            type=\"text\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n            placeholder=\"Enter your city\"\n            className={styles.CityInput}\n          />\n\n          <button onClick={getWeather} className={styles.SubmitButton}>\n            Get Weather\n          </button>\n        </div>\n      )}\n\n      {error !== \"\" && <p className={styles.Error}>{error}</p>}\n\n      {weatherData && (\n        <p className={styles.CityCopy}>\n          Showing weather for{\" \"}\n          <span className={styles.CityName}>{weatherData.name}</span>\n        </p>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./Icon.module.scss\";\nimport axios from \"axios\";\n\nconst Icon = ({ weather }) => {\n  let [iconURL, setURL] = useState();\n  const { description } = weather[0];\n\n  useEffect(() => {\n    if (weather) {\n      axios\n        .get(\n          ` https://openweathermap.org/img/wn/${weather[0].icon}@2x.png\n          `\n        )\n        .then((response) => {\n          setURL(response.config.url);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  });\n\n  return (\n    <div className={styles.IconContainer}>\n      <img className={styles.Image} src={iconURL} alt={`${description} icon`} />\n    </div>\n  );\n};\n\nexport default Icon;\n","import React from \"react\";\nimport styles from \"./Temperature.module.scss\";\nimport Icon from \"../Icon/Icon\";\n\nconst Temperature = ({ weatherData }) => {\n  const { name, main, weather } = weatherData;\n\n  return (\n    <section className={styles.TemperatureContainer}>\n      <h2 className={styles.WeatherLocationCopy}>Weather in {name}</h2>\n      <div className={styles.CopyAndImage}>\n        <div className={styles.TemperatureCopy}>\n          <h3 className={styles.MainTemperature}>\n            {Math.round(main.temp)}\n            {\"\\u00b0\"}\n          </h3>\n          <p className={styles.FeelsLikeTemperature}>\n            Feels like{\" \"}\n            <span>\n              {Math.round(main.feels_like)}\n              {\"\\u00b0\"}\n            </span>\n          </p>\n          <h3 className={styles.TemperatureDescription}>\n            {weather[0].description}\n          </h3>\n        </div>\n        <Icon weather={weather} />\n      </div>\n    </section>\n  );\n};\n\nexport default Temperature;\n","import React from \"react\";\nimport styles from \"./CurrentTemperature.module.scss\";\nimport Temperature from \"../Temperature/Temperature\";\n\nconst CurrentTemperature = ({ weatherData }) => {\n  return (\n    <div className={styles.CurrentTemperatureContainer}>\n      <Temperature weatherData={weatherData} />\n    </div>\n  );\n};\n\nexport default CurrentTemperature;\n","import React from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport styles from \"./HourlyForecast.module.scss\";\n\nconst HourlyForecast = ({ hourly }) => {\n  const { dt, main, weather } = hourly;\n\n  const convertDateandTime = (date, conversion) => {\n    const newDate = new Date(date * 1000);\n    if (conversion === \"date\") return newDate.toDateString();\n    if (conversion === \"time\") return newDate.toLocaleTimeString();\n  };\n\n  return (\n    <div className={styles.HourlyForecastContainer}>\n      <h2 className={styles.Date}>{convertDateandTime(dt, \"date\")}</h2>\n      <p className={styles.Time}>{convertDateandTime(dt, \"time\")}</p>\n      <h3 className={styles.MainTemperature}>\n        {Math.round(main.temp)}\n        {\"\\u00b0\"}\n      </h3>\n      <Icon weather={weather} />\n    </div>\n  );\n};\n\nexport default HourlyForecast;\n","import React from \"react\";\nimport HourlyForecast from \"../HourlyForecast/HourlyForecast\";\nimport styles from \"./DailyForecast.module.scss\";\n\nconst DailyForecast = ({ forecast }) => {\n  const getHourly = (hourly) => (\n    <HourlyForecast key={hourly.dt_txt} hourly={hourly} />\n  );\n\n  return (\n    <div className={styles.DailyForecastContainer}>\n      {forecast.map(getHourly)}\n    </div>\n  );\n};\n\nexport default DailyForecast;\n","import React from \"react\";\nimport DailyForecast from \"../DailyForecast/DailyForecast\";\nimport styles from \"./FiveDayForecast.module.scss\";\n\nconst FiveDayForecast = ({ name, forecastList }) => {\n  const getForecast = (forecast) => (\n    <DailyForecast key={forecast[0].dt_txt} forecast={forecast} />\n  );\n\n  const splitArray = (array) => {\n    let newForecastArray = [];\n    let arrayCopy = [...array];\n    while (arrayCopy.length > 0) {\n      //not sure about this logic yet. May need to compare dates\n      newForecastArray.push(arrayCopy.splice(0, 8));\n    }\n\n    return newForecastArray;\n  };\n\n  return (\n    <div className={styles.FiveDayForecastContainer}>\n      <h2 className={styles.ForecastTitle}>\n        5 Day 3 Hour Forecast for{\" \"}\n        <span className={styles.CityName}>{name}</span>\n      </h2>\n      <div className={styles.FiveDayForecast}>\n        {splitArray(forecastList).map(getForecast)}\n      </div>\n    </div>\n  );\n};\n\nexport default FiveDayForecast;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.scss\";\nimport Header from \"../components/Header/Header\";\nimport CurrentTemperature from \"../components/CurrentTemperature/CurrentTemperature\";\nimport FiveDayForecast from \"../components/FiveDayForecast/FiveDayForecast\";\nimport axios from \"axios\";\n\nconst App = () => {\n  let [error, setError] = useState(\"\");\n  let [step, setStep] = useState(0);\n  let [weatherData, setWeatherData] = useState(null);\n  let [forecastList, setForecastList] = useState([]);\n  let [showInput, setshowInput] = useState(false);\n\n  const isError = (city, errorCode) => {\n    if (city === \"\") {\n      setError(\"Please enter a city.\");\n      return true;\n    } else if (errorCode === 404) {\n      //need to fix this error handling. Not receiving the error codes yet\n      setError(\"City not found. Please enter valid city.\");\n      return true;\n    } else {\n      setError(\"\");\n      return false;\n    }\n  };\n\n  const setCurrentCity = (position, city) => {\n    let latitude;\n    let longitude;\n    let url;\n\n    if (position === null) {\n      if (!isError(city)) {\n        url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=imperial\n        `;\n      } else return;\n    } else {\n      latitude = position.coords.latitude;\n      longitude = position.coords.longitude;\n      url = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=imperial\n    `;\n    }\n\n    axios\n      .get(url)\n      .then((response) => {\n        if (response.status > 400) {\n          throw response;\n        }\n\n        setWeatherData(response.data);\n        setStep(1);\n        getFiveDayForecast(response.data);\n      })\n      .catch((error) => {\n        isError(error.response.status);\n      });\n  };\n\n  const getFiveDayForecast = (data) => {\n    const { id } = data;\n\n    axios\n      .get(\n        ` https://api.openweathermap.org/data/2.5/forecast?id=${id}&appid=${process.env.REACT_APP_WEATHER_API_KEY}&units=imperial\n          `\n      )\n      .then((response) => {\n        if (response.status > 400) {\n          throw response;\n        }\n        console.log(response.data);\n        setForecastList(response.data.list);\n      })\n      .catch((error) => {\n        isError(error.response.status);\n      });\n  };\n\n  useEffect(() => {\n    //gets location of user\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(setCurrentCity, function (\n        error\n      ) {\n        if (error.code == error.PERMISSION_DENIED) setshowInput(true);\n      });\n    }\n  }, []);\n\n  const stateManager = () => {\n    switch (step) {\n      case 0:\n        return <p className=\"default-copy\">Fetching your current weather...</p>;\n      case 1:\n        return <CurrentTemperature weatherData={weatherData} />;\n      case 2:\n        return (\n          <FiveDayForecast\n            name={weatherData.name}\n            forecastList={forecastList}\n          />\n        );\n      default:\n        return <p className=\"default-copy\">Fetching your current weather...</p>;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        weatherData={weatherData}\n        showInput={showInput}\n        setCurrentCity={setCurrentCity}\n        error={error}\n      />\n      {weatherData !== null && (\n        <section className=\"sub-navigation\">\n          <ul>\n            <li\n              className={step === 1 ? \"active\" : null}\n              onClick={() => {\n                setStep(1);\n              }}\n            >\n              Current Temperature\n            </li>\n            <li\n              className={step === 2 ? \"active\" : null}\n              onClick={() => {\n                setStep(2);\n              }}\n            >\n              5 Day Forecast\n            </li>\n          </ul>\n        </section>\n      )}\n\n      {stateManager()}\n      {error !== \"\" && <p className=\"error\">{error}</p>}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HourlyForecastContainer\":\"HourlyForecast_HourlyForecastContainer__3zmKj\",\"Date\":\"HourlyForecast_Date__2zPb_\",\"Time\":\"HourlyForecast_Time__1ZxHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FiveDayForecastContainer\":\"FiveDayForecast_FiveDayForecastContainer__2NuVW\",\"ForecastTitle\":\"FiveDayForecast_ForecastTitle__3DkTd\",\"FiveDayForecast\":\"FiveDayForecast_FiveDayForecast__1CaZG\",\"CityName\":\"FiveDayForecast_CityName__2xjC6\"};"],"sourceRoot":""}